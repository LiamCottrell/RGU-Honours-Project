{"version":3,"sources":["App.js","Home.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","ar","stats","App_Earth","App_Popup","App_Camera","React","Component","Boat","a-location","rotation","ship-events","scale","src","begin","attribute","to","easing","dur","fill","Earth","id","position","visible","a-terrain","App_Boat","Popup","className","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Camera","camera","orbit-controls","geometry","material","cursor","from","request","require","_","data","json","err","res","body","console","log","url","explanation","JSON","parse","Home","href","action","method","htmlFor","name","value","Home_BoatOptions","Home_Footer","Footer","BoatOptions","unique","countBy","o","MMSI","Object","keys","map","index","key","values","Boolean","window","location","hostname","match","routes","react_router_dom","react_router","path","component","exact","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8bc42109.chunk.js","sourcesContent":["import React from 'react';\n\n\nclass App extends React.Component {\n    render() {\n        return (\n            <a-scene ar stats >\n                <Earth />\n                <Popup />\n                <Camera />\n            </a-scene>\n        )\n    }\n}\n\n\nclass Boat extends React.Component {\n    render() {\n        return (\n            <a-entity a-location=\"lat:60.27432; lon:-1.08595; radius:0.15; mode:relative; elevation:0\">\n                <a-entity rotation=\"-90 0 0\">\n                    <a-gltf-model ship-events scale=\"0.00002 0.00002 0.00002\" src=\"boat.glb\">\n                    </a-gltf-model>\n                    <a-animation begin=\"click\" attribute=\"rotation\" to=\"0 0 360\" easing=\"linear\" dur=\"2000\" fill=\"backwards\"/>\n                </a-entity>\n            </a-entity>\n        )\n    }\n}\n\n\n\n\nclass Earth extends React.Component{\n    render() {\n        return (\n            <a-entity id=\"world\" position=\"0 0 -0.4\" visible=\"true\" a-terrain=\"\n\t                observer:camera;\n\t                radius:0.15;\n\t                observer:camera;\n\t            \">\n                <Boat />\n            </a-entity>\n        )\n    }\n}\n\n\nclass Popup extends React.Component{\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"shipPopup\" tabIndex=\"-1\" role=\"dialog\"\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div className=\"modal-body\">\n                           testicle\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button id=\"closePopup\" type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nclass Camera extends React.Component{\n    render() {\n        return (\n            <a-entity id=\"cameraRig\">\n                <a-entity\n                    id=\"camera\"\n                    camera=\"fov: 45; near:5; far:10\"\n                    position=\"0 0 0\"\n                    orbit-controls=\"\n\t\t\t\t        target: #world;\n\t\t\t\t        minDistance:1000;\n\t\t\t\t        maxDistance:5000;\n\t\t\t\t        minPolarAngle:0.1;\n\t\t\t\t        maxPolarAngle:3.04159265359;\n\t\t\t\t        enableProportionalVelocity:true;\n\t\t\t\t    \">\n                    <a-entity position=\"0 0 -0.2\"\n                              geometry=\"primitive: ring; radiusInner: 0.005; radiusOuter: 0.01;\"\n                              material=\"color: cyan; shader: flat\"\n                              cursor=\"maxDistance: 30; fuse: true\">\n                        <a-animation begin=\"click\" easing=\"ease-in\" attribute=\"scale\" fill=\"forwards\" from=\"0.2 0.2 0.2\" to=\"1 1 1\" dur=\"150\"/>\n                        <a-animation begin=\"fusing\" easing=\"ease-in\" attribute=\"scale\" fill=\"backwards\" from=\"1 1 1\" to=\"0.2 0.2 0.2\" dur=\"1500\"/>\n                    </a-entity>\n                </a-entity>\n            </a-entity>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\nconst request = require('request');\n\nconst _ = require('underscore');\n\n// const data = require('./data/export.10000.json');\n\nlet data = {};\n\n\nrequest('http://localhost:3000/api/getData', { json: true }, (err, res, body) => {\n    if (err) { return console.log(err); }\n    console.log(body.url);\n    console.log(body.explanation);\n    data = JSON.parse(body)\n});\n\n\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n                <header className=\"masthead mb-auto\">\n                    <div className=\"inner\">\n                        <h3 className=\"masthead-brand\">A Ship</h3>\n                        <nav className=\"nav nav-masthead justify-content-center\">\n                            <a className=\"nav-link active\" href=\"/\">Home</a>\n                            <a className=\"nav-link\" href=\"/world\">World</a>\n                            <a className=\"nav-link\" href=\"/contact\">Contact</a>\n                        </nav>\n                    </div>\n                </header>\n\n                <main role=\"main\" className=\"inner cover\">\n                    <h1 className=\"cover-heading\">Search for Boats.</h1>\n                        <form action=\"world\" method='get'>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleFormControlSelect1\">Filter Boat by MMSI</label>\n                                <select className=\"form-control\" id=\"boatmmsi\" name=\"MMSI\">\n                                    <option value=''>All</option>\n                                    <BoatOptions/>\n                                </select>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Show Map</button>\n                        </form>\n                </main>\n\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nclass Footer extends React.Component {\n    // Create a list of boat options from the dataset.\n    render() {\n        return (\n            <footer className=\"mastfoot mt-auto\">\n                <div className=\"inner\">\n                    <p>Cover template for <a href=\"https://getbootstrap.com/\">Bootstrap</a>, by <a\n                        href=\"https://twitter.com/mdo\">@mdo</a>, used by Liam Cottrell.</p>\n                </div>\n            </footer>\n        )\n    }\n}\n\nclass BoatOptions extends React.Component {\n    // Create a list of boat options from the dataset.\n    render() {\n        const unique = _.countBy(data, function (o) {\n            return o.MMSI;\n        });\n        // Return a list of option elements with the name of the MMSI and the quality of records.\n        return Object.keys(unique).map(function (name, index) {\n            return <option key={name} value={Object.keys(unique)[index]}>`{Object.keys(unique)[index]}` locations({Object.values(unique)[index]})</option>\n        });\n    }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { BrowserRouter, Route } from 'react-router-dom';\n\nimport App from './App';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst routes = (\n    <BrowserRouter>\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/world\" component={App}/>\n    </BrowserRouter>\n);\nReactDOM.render(routes, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}