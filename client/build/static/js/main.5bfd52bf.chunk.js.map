{"version":3,"sources":["App.js","Home.js","serviceWorker.js","index.js"],"names":["_","require","randomColor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDataMMSI","mmsi","fetch","then","res","json","data","where","MMSI","parseInt","setState","getShips","state","ships","getRandomShips","tempData","chooseRandom","getDataFromShip","tempObjs","forEach","ship","allShip","push","console","log","items","countBy","o","keys","map","index","quantity","sample","values","queryString","parse","location","search","react_default","a","createElement","ar","stats","App_Earth","App_Popup","App_Camera","React","Component","EarthObj","myLat","myLon","Lat","Lon","isBoat","boat","a-location","App_Boat","App_Trace","traceColour","Earth","boatPos","id","position","visible","a-terrain","singleShip","length","App_EarthObj","key","Latitude","Longitude","Boat","rotation","data-mmsi","data-recvtime","RecvTime","$date","data-posacc","PositionAccuracy","data-lat","data-lon","ship-events","scale","src","Trace","color","Popup","className","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Camera","camera","orbit-controls","geometry","material","cursor","begin","easing","attribute","fill","from","to","dur","geodist","Home","href","action","method","htmlFor","name","value","Home_BoatOptions","Home_Footer","Footer","BoatOptions","getData","unique","distance","rows","quantityOfPoints","firstPoint","lat","lon","lastPoint","format","unit","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","routes","react_router_dom","react_router","path","component","exact","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","concat","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5bfd52bf.chunk.js","sourcesContent":["import React from 'react';\n\nimport queryString from 'query-string'\n\nconst _ = require('underscore');\nconst randomColor = require('randomcolor'); // import the script\n\n\nclass App extends React.Component {\n    // Initialize the state\n    constructor(props) {\n        super(props);\n        this.state = {\n            ships: [],\n            data: {},\n            tempData: {}\n        }\n    }\n\n    componentDidMount() {\n        const values = queryString.parse(this.props.location.search);\n\n        if (values.MMSI) {\n            this.getDataMMSI(values.MMSI);\n        } else {\n            this.getRandomShips();\n\n        }\n\n\n    }\n\n    getDataMMSI = (mmsi) => {\n        fetch('/api/getData')\n            .then(res => res.json())\n            .then(data => _.where(data, {MMSI: parseInt(mmsi, 10)}))\n            .then(data => this.setState({data}))\n            .then(data => this.getShips(this.state.data))\n            .then(ships => this.setState({ships}))\n\n    };\n\n    getRandomShips = () => {\n        fetch('/api/getData')\n            .then(res => res.json())\n            .then(tempData => this.setState({tempData}))\n            .then(data => this.chooseRandom(this.state.tempData, 20))\n            .then(ships => this.setState({ships}))\n            .then(data => this.getDataFromShip(this.state.tempData, this.state.ships))\n            .then(data => this.setState({data}))\n    };\n\n    getDataFromShip = (data, ships) => {\n        let tempObjs = [];\n        ships.forEach(function (ship) {\n            let result = _.where(data, {MMSI: parseInt(ship, 10)});\n            result.forEach(function (allShip) {\n                tempObjs.push(allShip);\n            });\n            // tempObjs.push(result);\n        });\n        console.log('tempobj');\n        console.log(tempObjs);\n        return tempObjs;\n    };\n\n\n    getShips = (data) => {\n        console.log(data);\n        let items = _.countBy(data, function (o) {\n            return o.MMSI\n        });\n        console.log(items);\n        return Object.keys(items).map(function (index) {\n            return index;\n        });\n    };\n\n\n    chooseRandom = (data, quantity) => {\n        console.log(data);\n        let items = _.countBy(data, function (o) {\n            return o.MMSI\n        });\n\n        return _.sample(Object.keys(items).map(function (index) {\n            return index;\n        }), quantity);\n    };\n\n    render() {\n        let {data} = this.state;\n        let {ships} = this.state;\n        return (\n            <a-scene ar stats>\n                {data ? (\n                    <Earth ships={ships} data={data}/>\n                ) : (\n                    <Earth/>\n                )\n                }\n                <Popup/>\n                <Camera/>\n            </a-scene>\n        )\n    }\n}\n\n\nclass EarthObj extends React.Component {\n    render() {\n        let myLat = null;\n        let myLon = null;\n        if (!this.props.Lat) {\n            myLat = 60.27432;\n        } else {\n            myLat = this.props.Lat\n        }\n        if (!this.props.Lon) {\n            myLon = -1.08595;\n        } else {\n            myLon = this.props.Lon;\n        }\n        let isBoat = this.props.boat;\n        return (\n            <a-entity a-location={\n                'lat:' + myLat + ';'\n                + 'lon:' + myLon + ';'\n                + 'radius:0.15;'\n                + 'mode:relative;'\n                + 'elevation:0'}\n            >\n                {\n                    isBoat ? (\n                            <Boat data={this.props.data}/>\n                        )\n                        :\n                        (\n                            <Trace traceColour={this.props.traceColour}/>\n                        )\n                }\n\n            </a-entity>\n        )\n    }\n}\n\nclass Earth extends React.Component {\n    render() {\n        let boatPos = this.props.data;\n        let ships = this.props.ships;\n\n        console.log(Object.keys(boatPos).map);\n\n        return (\n            <a-entity id=\"world\" position=\"0 0 -0.4\" visible=\"true\" a-terrain=\"\n\t                observer:camera;\n\t                radius:0.15;\n\t                observer:camera;\n\t            \">\n\n                {\n                    // IF i have data\n                    this.props.data ? (\n                        //Take for every value i have in the ship MMSI array\n                        ships.map(function (mmsi) {\n                            let traceColour = randomColor();\n                            // Create local object where Boats in data have the provided MMSI\n                            let singleShip = _.where(boatPos, {MMSI: parseInt(mmsi, 10)});\n                            return (\n                                Object.keys(singleShip).map(function (index) {\n                                    if ((Object.keys(singleShip).length - 1) !== parseInt(index)) {\n                                        //Return Boat Traces\n                                        return (<EarthObj\n                                            key={index + mmsi}\n                                            boat={false}\n                                            traceColour={traceColour}\n                                            Lat={Object.values(singleShip)[index].Latitude}\n                                            Lon={Object.values(singleShip)[index].Longitude}\n                                        />)\n                                    } else {\n                                        //Return Boat Model Object\n                                        return (<EarthObj\n                                            key={index + mmsi}\n                                            boat={true}\n                                            data={Object.values(singleShip)[index]}\n                                            Lat={Object.values(singleShip)[index].Latitude}\n                                            Lon={Object.values(singleShip)[index].Longitude}\n                                        />)\n                                    }\n                                })\n                            )\n                        })\n                    ) : (\n                        null\n                    )\n\n                }\n\n            </a-entity>\n        )\n    }\n}\n\nclass Boat extends React.Component {\n    render() {\n        return (\n            <a-entity rotation=\"-90 0 0\">\n                <a-gltf-model\n                    data-mmsi={this.props.data.MMSI}\n                    data-recvtime={this.props.data.RecvTime.$date}\n                    data-posacc={this.props.data.PositionAccuracy}\n                    data-lat={this.props.data.Latitude}\n                    data-lon={this.props.data.Longitude}\n                    ship-events\n                    scale=\"0.00002 0.00002 0.00002\"\n                    src=\"boat.glb\"\n                />\n            </a-entity>\n        )\n    }\n}\n\nclass Trace extends React.Component {\n    render() {\n        let traceColour = this.props.traceColour;\n        return (\n            <a-box scale=\"0.0006 0.0006 0.0006\" color={traceColour}/>\n        );\n    }\n}\n\n\nclass Popup extends React.Component {\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"shipPopup\" tabIndex=\"-1\" role=\"dialog\"\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Details about this Ship.</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div id=\"shipContent\" className=\"modal-body\">\n                            You shouldn't see this...\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button id=\"closePopup\" type=\"button\" className=\"btn btn-secondary\"\n                                    data-dismiss=\"modal\">Close\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nclass Camera extends React.Component {\n    render() {\n        return (\n            <a-entity id=\"cameraRig\">\n                <a-entity\n                    id=\"camera\"\n                    camera=\"fov: 45; near:5; far:10\"\n                    position=\"0 0 0\"\n                    orbit-controls=\"\n\t\t\t\t        target: #world;\n\t\t\t\t        minDistance:1000;\n\t\t\t\t        maxDistance:5000;\n\t\t\t\t        minPolarAngle:0.1;\n\t\t\t\t        maxPolarAngle:3.04159265359;\n\t\t\t\t        enableProportionalVelocity:true;\n\t\t\t\t    \">\n                    <a-entity position=\"0 0 -0.05\"\n                              geometry=\"primitive: ring; radiusInner: 0.0005; radiusOuter: 0.001;\"\n                              material=\"color: cyan; shader: flat\"\n                              cursor=\"maxDistance: 30; fuse: true\">\n                        <a-animation begin=\"click\" easing=\"ease-in\" attribute=\"scale\" fill=\"forwards\" from=\"0.2 0.2 0.2\"\n                                     to=\"1 1 1\" dur=\"150\"/>\n                        <a-animation begin=\"fusing\" easing=\"ease-in\" attribute=\"scale\" fill=\"backwards\" from=\"1 1 1\"\n                                     to=\"0.2 0.2 0.2\" dur=\"1500\"/>\n                    </a-entity>\n                </a-entity>\n            </a-entity>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\n// const request = require('request');\n\nconst _ = require('underscore');\nconst geodist = require('geodist');\n\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n                <header className=\"masthead mb-auto\">\n                    <div className=\"inner\">\n                        <h3 className=\"masthead-brand\">Ship Honours Project</h3>\n                        <nav className=\"nav nav-masthead justify-content-center\">\n                            <a className=\"nav-link active\" href=\"/\">Home</a>\n                            <a className=\"nav-link\" href=\"/world\">World</a>\n                        </nav>\n                    </div>\n                </header>\n\n                <main role=\"main\" className=\"inner cover\">\n                    <h1 className=\"cover-heading\">Search for Boats.</h1>\n                        <form action=\"world\" method='get'>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleFormControlSelect1\">Filter Boat by MMSI</label>\n                                <select className=\"form-control\" id=\"boatmmsi\" name=\"MMSI\">\n                                    <option value=''>All</option>\n                                    <BoatOptions/>\n                                </select>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Show Map</button>\n                        </form>\n                </main>\n\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nclass Footer extends React.Component {\n    // Create a list of boat options from the dataset.\n    render() {\n        return (\n            <footer className=\"mastfoot mt-auto\">\n                <div className=\"inner\">\n                    <p>Cover template for <a href=\"https://getbootstrap.com/\">Bootstrap</a>, by <a\n                        href=\"https://twitter.com/mdo\">@mdo</a>, used by Liam Cottrell.</p>\n                </div>\n            </footer>\n        )\n    }\n}\n\nclass BoatOptions extends React.Component {\n    // Initialize the state\n    constructor(props){\n        super(props);\n        this.state = {\n            data: {}\n        }\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    // Retrieves the list of items from the Express app\n    getData = () => {\n        fetch('/api/getData')\n            .then(res => res.json())\n            .then(data => this.setState({ data }))\n    };\n    // Create a list of boat options from the dataset.\n    render() {\n        const { data } = this.state;\n        const unique = _.countBy(data, function (o) {\n            return o.MMSI;\n        });\n\n        // Takes the first and the last known points and calculates the distance apart in miles\n        const distance = Object.keys(unique).map(function (name, index){\n            let rows = _.where(data, { MMSI: parseInt(name, 10) });\n            let quantityOfPoints = Object.keys(rows).length;\n            let firstPoint = {\n                lat: Object.values(rows)[0].Latitude,\n                lon: Object.values(rows)[0].Longitude,\n            };\n            let lastPoint = {\n                lat: Object.values(rows)[quantityOfPoints-1].Latitude,\n                lon: Object.values(rows)[quantityOfPoints-1].Longitude,\n            };\n            return geodist(firstPoint, lastPoint, {format: true, unit: 'miles'});\n        });\n\n        // Return a list of option elements with the name of the MMSI and the quality of records.\n        return Object.keys(unique).map(function (name, index) {\n            return <option key={name} value={Object.keys(unique)[index]}>`\n                {Object.keys(unique)[index]}` locations({Object.values(unique)[index]}), {Object.values(distance)[index]}\n            </option>\n        });\n    }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { BrowserRouter, Route } from 'react-router-dom';\n\nimport App from './App';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst routes = (\n    <BrowserRouter>\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/world\" component={App}/>\n    </BrowserRouter>\n);\nReactDOM.render(routes, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}