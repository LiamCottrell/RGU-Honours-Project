{"version":3,"sources":["App.js","Home.js","serviceWorker.js","index.js"],"names":["_","require","randomColor","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getDataMMSI","id","fetch","then","res","json","data","where","MMSI","parseInt","setState","state","values","queryString","parse","location","search","console","log","react_default","a","createElement","ar","stats","App_Earth","App_Popup","App_Camera","React","Component","EarthObj","myLat","myLon","Lat","Lon","isBoat","boat","a-location","App_Boat","App_Trace","traceColour","Earth","boatPos","position","visible","a-terrain","keys","map","name","index","length","App_EarthObj","key","Latitude","Longitude","Boat","rotation","mmsi","data-ship","ship-events","scale","src","Trace","color","Popup","className","tabIndex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","Camera","camera","orbit-controls","geometry","material","cursor","begin","easing","attribute","fill","from","to","dur","geodist","Home","href","action","method","htmlFor","value","Home_BoatOptions","Home_Footer","Footer","BoatOptions","getData","unique","countBy","o","distance","rows","quantityOfPoints","firstPoint","lat","lon","lastPoint","format","unit","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","routes","react_router_dom","react_router","path","component","exact","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","concat","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.00c3e053.chunk.js","sourcesContent":["import React from 'react';\n\nimport queryString from 'query-string'\n\nconst _ = require('underscore');\nconst randomColor = require('randomcolor'); // import the script\n\n\nclass App extends React.Component {\n    // Initialize the state\n    constructor(props){\n        super(props);\n        this.state = {\n            id: null,\n            data: {}\n        }\n    }\n    componentDidMount() {\n        const values = queryString.parse(this.props.location.search);\n        if (values.MMSI) {\n            this.getDataMMSI(values.MMSI);\n        }\n\n\n    }\n    getDataMMSI = (id) => {\n        fetch('/api/getData')\n            .then(res => res.json())\n            .then( data => _.where(data, { MMSI: parseInt(id, 10) } ))\n            .then(data => this.setState({ id , data }))\n    };\n    render() {\n        let { data }  = this.state;\n        console.log(data);\n        return (\n            <a-scene ar stats >\n                { data ? (\n                    <Earth data = { data } />\n                ) : (\n                    <Earth />\n                    )\n                }\n                <Popup />\n                <Camera />\n            </a-scene>\n        )\n    }\n}\n\n\nclass EarthObj extends React.Component {\n    render() {\n        let myLat = null;\n        let myLon = null;\n        if (!this.props.Lat){\n            myLat = 60.27432;\n        } else {\n            myLat = this.props.Lat\n        }\n        if (!this.props.Lon){\n            myLon = -1.08595;\n        } else {\n            myLon = this.props.Lon;\n        }\n        let isBoat = this.props.boat;\n        return (\n            <a-entity a-location={\n                'lat:' + myLat + ';'\n                +'lon:' + myLon + ';'\n                +'radius:0.15;'\n                +'mode:relative;'\n                +'elevation:0'}\n            >\n                {\n                    isBoat ? (\n                            <Boat data={this.props.data} />\n                        )\n                        :\n                        (\n                            <Trace traceColour={this.props.traceColour} />\n                        )\n                }\n\n            </a-entity>\n        )\n    }\n}\n\nclass Earth extends React.Component{\n    render() {\n        let boatPos = this.props.data;\n        let traceColour = randomColor();\n\n        return (\n            <a-entity id=\"world\" position=\"0 0 -0.4\" visible=\"true\" a-terrain=\"\n\t                observer:camera;\n\t                radius:0.15;\n\t                observer:camera;\n\t            \">\n                { this.props.data ? (\n                    Object.keys(boatPos).map(function(name, index){\n                        if (index !== (Object.values(boatPos).length - 1)){\n                            //Return Boat Traces\n                            return (<EarthObj\n                                        key={name}\n                                        boat={false}\n                                        traceColour={traceColour}\n                                        Lat={Object.values(boatPos)[index].Latitude}\n                                        Lon={Object.values(boatPos)[index].Longitude}\n                                    />)\n                        } else {\n                            //Return Boat Model Object\n                            return (<EarthObj\n                                        key={name}\n                                        boat={true}\n                                        data={Object.values(boatPos)[index]}\n                                        Lat={Object.values(boatPos)[index].Latitude}\n                                        Lon={Object.values(boatPos)[index].Longitude}\n                                    />)\n                        }\n                    })\n                ) : (\n                    null\n                )\n                }\n            </a-entity>\n        )\n    }\n}\n\nclass Boat extends React.Component{\n    render() {\n        console.log('this is the dom data');\n        console.log(this.props.data);\n        return (\n            <a-entity  rotation=\"-90 0 0\">\n                <a-gltf-model\n                    mmsi={this.props.data.MMSI}\n                    data-ship={this.props.data}\n                    ship-events\n                    scale=\"0.00002 0.00002 0.00002\"\n                    src=\"boat.glb\"\n                />\n                {/*<a-animation begin=\"click\" attribute=\"rotation\" to=\"0 0 360\" easing=\"linear\" dur=\"2000\" fill=\"backwards\"/>*/}\n            </a-entity>\n        )\n    }\n}\n\nclass Trace extends React.Component{\n    render() {\n        let traceColour = this.props.traceColour;\n        return (\n            <a-box scale=\"0.0006 0.0006 0.0006\" color={traceColour}/>\n        );\n    }\n}\n\n\nclass Popup extends React.Component{\n\n    render() {\n        return (\n            <div className=\"modal fade\" id=\"shipPopup\" tabIndex=\"-1\" role=\"dialog\"\n                 aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n                <div className=\"modal-dialog\" role=\"document\">\n                    <div className=\"modal-content\">\n                        <div className=\"modal-header\">\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Modal title</h5>\n                            <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                <span aria-hidden=\"true\">&times;</span>\n                            </button>\n                        </div>\n                        <div id=\"shipContent\" className=\"modal-body\">\n                           testicle\n                        </div>\n                        <div className=\"modal-footer\">\n                            <button id=\"closePopup\" type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\n\nclass Camera extends React.Component{\n    render() {\n        return (\n            <a-entity id=\"cameraRig\">\n                <a-entity\n                    id=\"camera\"\n                    camera=\"fov: 45; near:5; far:10\"\n                    position=\"0 0 0\"\n                    orbit-controls=\"\n\t\t\t\t        target: #world;\n\t\t\t\t        minDistance:1000;\n\t\t\t\t        maxDistance:5000;\n\t\t\t\t        minPolarAngle:0.1;\n\t\t\t\t        maxPolarAngle:3.04159265359;\n\t\t\t\t        enableProportionalVelocity:true;\n\t\t\t\t    \">\n                    <a-entity position=\"0 0 -0.05\"\n                              geometry=\"primitive: ring; radiusInner: 0.0005; radiusOuter: 0.001;\"\n                              material=\"color: cyan; shader: flat\"\n                              cursor=\"maxDistance: 30; fuse: true\">\n                        <a-animation begin=\"click\" easing=\"ease-in\" attribute=\"scale\" fill=\"forwards\" from=\"0.2 0.2 0.2\" to=\"1 1 1\" dur=\"150\"/>\n                        <a-animation begin=\"fusing\" easing=\"ease-in\" attribute=\"scale\" fill=\"backwards\" from=\"1 1 1\" to=\"0.2 0.2 0.2\" dur=\"1500\"/>\n                    </a-entity>\n                </a-entity>\n            </a-entity>\n        )\n    }\n}\n\n\nexport default App;","import React from 'react';\n// const request = require('request');\n\nconst _ = require('underscore');\nconst geodist = require('geodist');\n\n\nclass Home extends React.Component {\n    render() {\n        return (\n            <div className=\"cover-container d-flex w-100 h-100 p-3 mx-auto flex-column\">\n                <header className=\"masthead mb-auto\">\n                    <div className=\"inner\">\n                        <h3 className=\"masthead-brand\">Ship Honours Project</h3>\n                        <nav className=\"nav nav-masthead justify-content-center\">\n                            <a className=\"nav-link active\" href=\"/\">Home</a>\n                            <a className=\"nav-link\" href=\"/world\">World</a>\n                            <a className=\"nav-link\" href=\"/contact\">Contact</a>\n                        </nav>\n                    </div>\n                </header>\n\n                <main role=\"main\" className=\"inner cover\">\n                    <h1 className=\"cover-heading\">Search for Boats.</h1>\n                        <form action=\"world\" method='get'>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleFormControlSelect1\">Filter Boat by MMSI</label>\n                                <select className=\"form-control\" id=\"boatmmsi\" name=\"MMSI\">\n                                    <option value=''>All</option>\n                                    <BoatOptions/>\n                                </select>\n                            </div>\n                            <button type=\"submit\" className=\"btn btn-primary\">Show Map</button>\n                        </form>\n                </main>\n\n                <Footer/>\n            </div>\n        )\n    }\n}\n\nclass Footer extends React.Component {\n    // Create a list of boat options from the dataset.\n    render() {\n        return (\n            <footer className=\"mastfoot mt-auto\">\n                <div className=\"inner\">\n                    <p>Cover template for <a href=\"https://getbootstrap.com/\">Bootstrap</a>, by <a\n                        href=\"https://twitter.com/mdo\">@mdo</a>, used by Liam Cottrell.</p>\n                </div>\n            </footer>\n        )\n    }\n}\n\nclass BoatOptions extends React.Component {\n    // Initialize the state\n    constructor(props){\n        super(props);\n        this.state = {\n            data: {}\n        }\n    }\n    componentDidMount() {\n        this.getData();\n    }\n    // Retrieves the list of items from the Express app\n    getData = () => {\n        fetch('/api/getData')\n            .then(res => res.json())\n            .then(data => this.setState({ data }))\n    };\n    // Create a list of boat options from the dataset.\n    render() {\n        const { data } = this.state;\n        const unique = _.countBy(data, function (o) {\n            return o.MMSI;\n        });\n\n        // Takes the first and the last known points and calculates the distance apart in miles\n        const distance = Object.keys(unique).map(function (name, index){\n            let rows = _.where(data, { MMSI: parseInt(name, 10) });\n            let quantityOfPoints = Object.keys(rows).length;\n            let firstPoint = {\n                lat: Object.values(rows)[0].Latitude,\n                lon: Object.values(rows)[0].Longitude,\n            };\n            let lastPoint = {\n                lat: Object.values(rows)[quantityOfPoints-1].Latitude,\n                lon: Object.values(rows)[quantityOfPoints-1].Longitude,\n            };\n            return geodist(firstPoint, lastPoint, {format: true, unit: 'miles'});\n        });\n\n        // Return a list of option elements with the name of the MMSI and the quality of records.\n        return Object.keys(unique).map(function (name, index) {\n            return <option key={name} value={Object.keys(unique)[index]}>`\n                {Object.keys(unique)[index]}` locations({Object.values(unique)[index]}), {Object.values(distance)[index]}\n            </option>\n        });\n    }\n}\n\nexport default Home;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport  { BrowserRouter, Route } from 'react-router-dom';\n\nimport App from './App';\nimport Home from './Home';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst routes = (\n    <BrowserRouter>\n        <Route path=\"/\" component={Home} exact={true}/>\n        <Route path=\"/world\" component={App}/>\n    </BrowserRouter>\n);\nReactDOM.render(routes, document.getElementById('root'));\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}